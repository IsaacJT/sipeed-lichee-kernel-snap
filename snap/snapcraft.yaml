---
# SPDX-License-Identifier: GPL-2.0
# Copyright (C) 2022 Isaac True

name: sipeed-lichee-rv-kernel
summary: A Sipeed Lichee RV BSP board kernel for use with Ubuntu Core 22
description: |
  A Sipeed Lichee RV BSP board kernel for use with Ubuntu Core 22

adopt-info: kernel
build-base: core22
grade: stable
confinement: strict
type: kernel
compression: xz

architectures:
  - build-on:
      - amd64
      - arm64
      - riscv64
    build-for:
      - riscv64

parts:
  kernel:
    plugin: nil
    build-environment:
      - PATH: "/usr/lib/ccache:${PATH}"
      - ARCH: "riscv"
      - on riscv64:
        - CROSS_COMPILE: ""
      - else:
        - CROSS_COMPILE: "${CRAFT_ARCH_TRIPLET}-"
    build-packages:
      - flex
      - bison
      - libssl-dev
      - libelf-dev
      - pahole
      - build-essential
      - ccache
      - on riscv64:
        - gcc
      - else:
        - gcc-${CRAFT_ARCH_TRIPLET}
    override-pull: |
      # Determine the latest version and download sources
      apt source $(apt info linux-headers-allwinner | grep -E '^Depends:' | cut -f2 -d\ | cut -f1 -d,)
      rm -f ${CRAFT_PART_SRC}/*.{orig.tar.gz,diff.gz,dsc}
      mv ${CRAFT_PART_SRC}/linux-allwinner-*/* ${CRAFT_PART_SRC}/
    override-build: |
      # Fix missing permission
      chmod a+x scripts/pahole-version.sh

      craftctl set version="$(head -n1 ${CRAFT_PART_BUILD}/debian.allwinner/changelog | cut -f 2 -d \( | cut -f 1 -d \))"
      craftctl set grade="devel"

      cat debian.allwinner/config/{config.common.ubuntu,${CRAFT_TARGET_ARCH}/config.{common.${CRAFT_TARGET_ARCH},flavour.allwinner}} \
        > ${CRAFT_PART_BUILD}/.config

      make oldconfig

      # Disable unneeded large modules
      scripts/config --disable CONFIG_DRM_NOUVEAU
      scripts/config --disable CONFIG_DRM_RADEON
      scripts/config --disable CONFIG_DRM_AMDGPU
      scripts/config --disable CONFIG_NET_VENDOR_MELLANOX

      # Disable preconfigured signing certificates
      scripts/config --disable CONFIG_MODULE_SIG_ALL
      scripts/config --set-str CONFIG_SYSTEM_REVOCATION_KEYS ""
      scripts/config --set-str CONFIG_SYSTEM_TRUSTED_KEYS ""

      scripts/config --set-str CONFIG_LOCALVERSION "-allwinner"

      make oldconfig

      make -j $(nproc) Image modules dtbs
      make -j $(nproc) INSTALL_MOD_PATH="${CRAFT_PART_INSTALL}/kernel-modules" \
        modules_install

      mv ${CRAFT_PART_INSTALL}/kernel-modules/lib/modules/* \
        ${CRAFT_PART_INSTALL}/kernel-modules/

      mkdir -p ${CRAFT_PART_INSTALL}/kernel-sources
      cp -ra ${CRAFT_PART_BUILD}/* ${CRAFT_PART_INSTALL}/kernel-sources/

      find ${CRAFT_PART_BUILD}/arch/${ARCH}/boot/dts/ -name \*.dtb \
        -exec install -Dm0644 -t ${CRAFT_PART_INSTALL}/dtbs/ {} \;
    prime:
      - -*

  initrd:
    after:
      - kernel
    plugin: nil
    source: initrd
    build-packages:
      - lz4
      - zstd
      - kmod
    override-build: |
      KVER="$(basename ${CRAFT_STAGE}/kernel-modules/*-allwinner | cut -f1 -d/)"

      # Just use a core20 initrd for now
      lz4cat ${CRAFT_PART_BUILD}/uc-initrd_20-stable_${CRAFT_TARGET_ARCH}.img | cpio -idm
      rm ${CRAFT_PART_BUILD}/uc-initrd_20-stable_${CRAFT_TARGET_ARCH}.img

      # Add module(s) necessary for booting
      install -Dm0644 ${CRAFT_STAGE}/kernel-modules/${KVER}/kernel/fs/nls/nls_iso8859-1.ko \
        -t ${CRAFT_PART_BUILD}/lib/modules/${KVER}/kernel/fs/nls

      depmod -b ${CRAFT_PART_BUILD} ${KVER}

      # Update module autoload configuration
      echo "nls_iso8859-1" > ${CRAFT_PART_BUILD}/usr/lib/modules-load.d/ubuntu-core-initramfs.conf

      find . | cpio -o -H newc -R 0:0 | zstd -T0 > ${CRAFT_PART_INSTALL}/initrd.img
    stage:
      - initrd.img
    prime:
      - -*

  firmware:
    plugin: nil
    stage-packages:
      - linux-firmware
      - wireless-regdb
    organize:
      lib/firmware: firmware
    stage:
      - -usr
      - -lib
      # Remove large firmware files that will never be used
      - -firmware/amd
      - -firmware/amdgpu
      - -firmware/asihpi
      - -firmware/cavium
      - -firmware/cxgb3
      - -firmware/cxgb4
      - -firmware/dpaa2
      - -firmware/i915
      - -firmware/intel
      - -firmware/iwlwifi-*
      - -firmware/liquidio
      - -firmware/matrox
      - -firmware/mediatek
      - -firmware/mellanox
      - -firmware/mrvl
      - -firmware/moxa
      - -firmware/netronome
      - -firmware/nvidia
      - -firmware/qed
      - -firmware/radeon
      - -firmware/rockchip
      - -firmware/ath10k/QCA9377/hw1.0/firmware-5.bin
      - -firmware/ath3k-1.fw
      - -firmware/qca/htbtfw20.tlv
      - -firmware/qcom
      - -firmware/s5p*
      - -firmware/ath11k
      - -firmware/ath10k
      - -firmware/brcm
      - -firmware/vsc
      - -firmware/cypress

  wlan-driver:
    after:
      - kernel
    plugin: nil
    source: https://github.com/lwfinger/rtl8723ds.git
    source-type: git
    source-depth: 1
    source-branch: master
    build-environment:
      - PATH: "/usr/lib/ccache:${PATH}"
      - on riscv64:
        - CROSS_COMPILE: ""
      - else:
        - CROSS_COMPILE: "${CRAFT_ARCH_TRIPLET}-"
    build-packages:
      - make
      - on riscv64:
        - gcc
      - else:
        - gcc-${CRAFT_ARCH_TRIPLET}
    override-build: |
      KVER="$(basename ${CRAFT_STAGE}/kernel-modules/*-allwinner | cut -f1 -d/)"

      make ARCH="riscv" KSRC="${CRAFT_STAGE}/kernel-sources" -j $(nproc) \
        modules

      install -Dm0644 ${CRAFT_PART_BUILD}/8723ds.ko \
        -t ${CRAFT_PART_INSTALL}/kernel-modules/${KVER}/dkms/
    prime:
      - -*

  depmod:
    plugin: nil
    after:
      - kernel
      - wlan-driver
    build-environment:
      - on riscv64:
        - CROSS_COMPILE: ""
      - else:
        - CROSS_COMPILE: "${CRAFT_ARCH_TRIPLET}-"
    build-packages:
      - kmod
    override-build: |
      KVER="$(basename ${CRAFT_STAGE}/kernel-modules/*-allwinner | cut -f1 -d/)"

      # Collect all kernel and separately built modules
      cp -ar ${CRAFT_STAGE}/kernel-modules   \
        ${CRAFT_PART_INSTALL}/modules

      find ${CRAFT_PART_INSTALL} -name \*.ko \
        -exec ${CROSS_COMPILE}strip {} --strip-unneeded \;

      ln -frs ${CRAFT_PART_INSTALL} ${CRAFT_PART_INSTALL}/lib
      depmod -b ${CRAFT_PART_INSTALL} ${KVER}

  wlan-firmware:
    plugin: dump
    source: https://github.com/armbian/firmware.git
    organize:
      rtl_bt/rtl8723ds_*.bin: firmware/rtl_bt/
    stage:
      - firmware/rtl_bt

  overlays:
    plugin: nil
    source: overlays
    build-packages:
      - device-tree-compiler
    override-build: |
      for f in $(ls ${CRAFT_PART_SRC}/*.dts); do
        dtc -@ -I dts -O dtb -o ${CRAFT_PART_INSTALL}/$(basename $f | cut -f1 -d.).dtbo $f
      done
    organize:
      "*.dtbo": dtbs/overlays/
    stage:
      - dtbs/overlays
    prime:
      - -*

  fit-image:
    after:
      - kernel
      - initrd
      - overlays
    plugin: nil
    source: fit-image
    build-packages:
      - u-boot-tools
    override-build: |
      mkimage \
          -f kernel_${CRAFT_TARGET_ARCH}.its \
          -r ${CRAFT_PART_INSTALL}/kernel.img
